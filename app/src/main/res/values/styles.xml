<resources>

    <!-- 'AppTheme' is base application theme.

      If you do not know what to choose between 'Theme.*.ActionBar' and 'Theme.*.NoActionBar' check this link.
      https://stackoverflow.com/questions/44516512/what-is-exact-difference-between-appbar-toolbar-actionbar-and-when-to-use-th/44516767

      Seems that 'Toolbar' also known as 'AppBar' should be used, because was added after 'ActionBar' and is more flexible.
      That means 'Theme.*.NoActionBar' should be used. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">

        <!-- color for the app bar and other primary UI elements -->
        <item name="colorPrimary">@color/colorPrimary</item>

        <!-- a darker variant of the primary color, used for the status bar (on Android 5.0+) and contextual app bars -->
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>

        <!-- a secondary color for controls like checkboxes and text fields -->
        <item name="colorAccent">@color/colorAccent</item>

        <!-- applied for all activities background color -->
        <item name="android:windowBackground">@color/colorPrimary</item>

        <!-- status bar appearance -->
        <!--https://imstudio.medium.com/android-change-status-bar-text-color-659680fce49b-->
        <item name="android:statusBarColor">@color/colorPrimary</item>
        <item name="android:windowLightStatusBar">true</item>

        <!-- app activities/fragments animations -->
        <item name="android:windowAnimationStyle">@style/AppTheme.CustomActivityAnimation</item>

        <!-- style action mode -->
        <!-- https://stackoverflow.com/questions/28374774/unable-to-style-action-mode-when-using-toolbar -->
        <item name="windowActionModeOverlay">true</item>
        <item name="actionModeStyle">@style/AppTheme.ActionModeStyle</item>

    </style>

    <style name="AppTheme.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <!-- TODO: delete this because was replaced with AppTheme.AppBarOverlay.PrimaryToolbarStyle -->
    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />

    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />



    <!--  =====================================================================================  -->
    <!--                                   Toolbar style                                         -->
    <!--  =====================================================================================  -->


    <!-- Primary style for Toolbar. It will be applied to the Toolbar using command:
                    android:theme="@style/AppTheme.BlackStyleToolbar"  -->
    <style name="AppTheme.AppBarOverlay.ToolbarStyle" parent="ThemeOverlay.AppCompat.Light">

        <!-- This will change title color for Toolbar.
             Also for changing toolbar title color you can use:
                - app:titleTextColor="" in XML file
                - toolbar_item.setTitleTextColor(here use a color , e.g. Color.RED) in java file

            Obs:
                This is available only for 'parent="ThemeOverlay.AppCompat.Light"'

                For example, if you use 'parent="ThemeOverlay.AppCompat.Dark.ActionBar"',
                this will change color of icons, title and items menus for toolbar. -->
        <item name="android:textColorPrimary">@color/colorToolbarTextLightTheme</item>

        <!-- This will change text size for items from the toolbar menu. Title is NOT affected. -->
        <item name="android:textSize">18sp</item>

        <!-- This will change text color for items from the toolbar menu. Title is NOT affected. -->
        <item name="android:textColor">@color/colorToolbarTextLightTheme</item>

        <!-- This will change text color for toolbar icons, menu icons and items from the toolbar menu.
             Title is NOT affected. -->
        <item name="android:textColorSecondary">@color/colorToolbarTextLightTheme</item>

        <!-- This will change background of the toolbar and menu items dialog.
             Also this will disable focus effect for item menu click. -->
        <!--<item name="android:background">@color/colorPrimary</item>-->
    </style>


    <style name="AppTheme.AppBarOverlay.ToolbarStyle.CardView" parent="AppTheme.AppBarOverlay.ToolbarStyle">
        <item name="android:background">@color/white</item>
    </style>

    <style name="AppTheme.AppBarOverlay.ToolbarStyle.OptionEdit" parent="AppTheme.AppBarOverlay.ToolbarStyle">
        <item name="android:background">@color/colorPrimary</item>
    </style>







    <!--  =====================================================================================  -->
    <!--                                   Action mode style                                     -->
    <!--  =====================================================================================  -->
    <!-- https://stackoverflow.com/questions/28374774/unable-to-style-action-mode-when-using-toolbar -->
    <style name="AppTheme.ActionModeStyle" parent="Widget.AppCompat.ActionMode">
        <item name="background">@color/colorPrimary</item>
        <item name="height">?attr/actionBarSize</item>
    </style>



    <!-- app activities/fragments animations -->
    <style name="AppTheme.CustomActivityAnimation" parent="@android:style/Animation.Activity">
        <item name="android:activityOpenEnterAnimation">@anim/anim_slide_in_right</item>
        <item name="android:activityOpenExitAnimation">@anim/anim_slide_out_left</item>
        <item name="android:activityCloseEnterAnimation">@anim/anim_slide_in_left</item>
        <item name="android:activityCloseExitAnimation">@anim/anim_slide_out_right</item>
    </style>

    <!-- TODO: delete this because was replaced with AppTheme.AppBarOverlay.PrimaryToolbarStyle -->
    <style name="AppTheme.BlackStyleToolbar" parent="AppTheme">
        <item name="android:textColorSecondary">@color/black</item>
        <item name="android:background">@color/colorPrimary</item>
    </style>

    <!-- For custom toast messages -->
    <style name="AppTheme.CustomToast">
        <item name="stTextColor">@color/white</item>
        <item name="stColorBackground">@color/toast_primary</item>
    </style>

    <!-- For navigation drawer -->
    <!-- In xml files call it: 'AppTheme.NavigationView'
         In java files call it: 'R.style.AppTheme_CustomToast' -->
    <style name="AppTheme.NavigationView">
        <item name="colorPrimary">@color/skyBlue</item> <!-- color for the selected item -->
        <item name="android:textColorSecondary">@color/black</item>
    </style>



    <!--  =====================================================================================  -->
    <!--                             Modal bottom sheets dialog style                            -->
    <!--  =====================================================================================  -->

    <!-- Modal bottom sheet with primary color background -->
    <style name="AppTheme.BottomSheetDialogTheme" parent="Theme.Design.Light.BottomSheetDialog">
        <item name="bottomSheetStyle">@style/AppTheme.BottomSheetDialogStyle</item>
    </style>

    <style name="AppTheme.BottomSheetDialogStyle" parent="Widget.Design.BottomSheet.Modal">
        <!-- This will make corners transparent and will be shown as a rounded corners -->
        <item name="android:background">@drawable/background_bottom_sheet_primary</item>
    </style>


    <!-- TODO: delete this and replace it with 'AppTheme.BottomSheetDialogTheme' -->
    <!-- Modal bottom sheet for Authentication Activity -->
    <style name="AuthenticationActivityBottomSheetDialogTheme" parent="Theme.Design.Light.BottomSheetDialog">
        <item name="bottomSheetStyle">@style/AuthenticationActivityBottomSheetStyle</item>
    </style>

    <style  name="AuthenticationActivityBottomSheetStyle" parent="Widget.Design.BottomSheet.Modal">
        <!-- This will make corners transparent and will be shown as a rounded corners -->
        <item name="android:background">@android:color/transparent</item>
    </style>







    <!--  =====================================================================================  -->
    <!--                                 Buttons styles                                          -->
    <!--  =====================================================================================  -->

    <!-- Use for custom buttons when normal state background color is colorPrimary  -->
    <style name="AppTheme.ButtonStyle" parent="@style/Widget.AppCompat.Button.Borderless">
        <item name="android:textSize">16sp</item>
        <item name="android:textColor">@color/black</item>
        <item name="android:textAllCaps">false</item>
        <item name="android:background">@drawable/background_button_primary</item>
        <item name="android:padding">10dp</item>
    </style>

    <!-- Use for custom buttons when normal state background color is white  -->
    <style name="AppTheme.ButtonStyle.WithBorder.White" parent="@android:style/Widget.Button">
        <item name="android:textSize">16sp</item>
        <item name="android:textAllCaps">false</item>
        <item name="android:paddingStart">15dp</item>
        <item name="android:paddingEnd">15dp</item>
        <item name="android:background">@drawable/background_button_white</item>
    </style>

    <!-- TODO: change this style with AppTheme.... -->
    <!-- For buttons from AuthenticationActivity -->
    <style name="AuthenticationActivityButtonStyle" parent="@android:style/Widget.Button">
        <item name="android:textSize">16sp</item>
        <item name="android:paddingStart">15dp</item>
        <item name="android:paddingEnd">15dp</item>
        <item name="android:background">@drawable/rounded_shape_activity_authentication</item>
    </style>

    <!-- For action buttons when ActionMode is on -->
    <style name="AppTheme.ButtonStyle.ActionModeButton" parent="AppTheme.ButtonStyle">
        <item name="android:textAlignment">center</item>
        <item name="android:drawablePadding">10dp</item>
    </style>

    <!-- For filter options from bottom modal sheets -->
    <style name="AppTheme.ButtonStyle.FilterButton" parent="@style/AppTheme.ButtonStyle">
        <item name="android:textAlignment">viewStart</item>
        <item name="android:drawablePadding">10dp</item>
    </style>

    <!-- For floating buttons -->
    <style name="AppTheme.ButtonStyle.FloatingButton.Primary" parent="@style/Widget.Design.FloatingActionButton">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_gravity">end|bottom</item>
    </style>

    <!-- For alert buttons -->
    <style name="AppTheme.ButtonStyle.WithBorder.Alert" parent="AppTheme.ButtonStyle.WithBorder.White">
        <item name="android:textColor">@color/white</item>
        <item name="android:background">@drawable/background_button_alert</item>
    </style>

    <!-- For info buttons -->
    <style name="AppTheme.ButtonStyle.WithBorder.Info" parent="AppTheme.ButtonStyle.WithBorder.White">
        <item name="android:textColor">@color/white</item>
        <item name="android:background">@drawable/background_button_info</item>
    </style>

    <!-- For info disabled buttons -->
    <style name="AppTheme.ButtonStyle.WithBorder.Info.Disabled" parent="AppTheme.ButtonStyle.WithBorder.White">
        <item name="android:textColor">@color/white</item>
        <item name="android:textStyle">italic</item>
        <item name="android:enabled">false</item>
        <item name="android:drawableTint">@color/white</item>
        <item name="android:background">@drawable/background_button_info_disabled</item>
    </style>


    <!--  =====================================================================================  -->
    <!--                                 Recycler view styles                                    -->
    <!--  =====================================================================================  -->
    <style name="AppTheme.RecyclerView.Primary" parent="AppTheme">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">match_parent</item>
        <item name="android:scrollbars">vertical</item>
        <item name="android:background">@drawable/background_recycler_view_primary</item>
    </style>





    <!--  =====================================================================================  -->
    <!--                                   Card views style                                      -->
    <!--  =====================================================================================  -->

    <!-- This will work only for 'com.google.android.material.card.MaterialCardView' -->
    <style name="AppTheme.CardView.MaterialDesign" parent="Theme.MaterialComponents.Light">
        <!-- this will change color for checked icon and card view background when item is selected -->
        <item name="colorPrimary">@color/colorAccent</item>

        <!-- this will change color for background when item is NOT selected -->
        <item name="colorSurface">@color/white</item>

        <!-- this will change color for background when item is clicked -->
        <item name="colorOnSurface">@color/green</item>

        <!-- this will change color for the element inside the checked icon -->
        <item name="checkedIconTint">@color/rose</item>

        <!-- this will change checked icon -->
        <item name="checkedIcon">@drawable/ic_baseline_checked_circle_24</item>
    </style>




    <!--  =====================================================================================  -->
    <!--                       Bottom navigation view style                                      -->
    <!--  =====================================================================================  -->
    <style name="AppTheme.BottomNavigationView.Primary" parent="AppTheme">
        <!-- this will change all navigation view bar background -->
        <item name="backgroundTint">@color/colorPrimary</item>

        <!-- this will change icon label text color -->
        <item name="itemTextColor">@color/colorToolbarTextLightTheme</item>

        <!-- this will change icon fill color -->
        <item name="itemIconTint">@drawable/style_bottom_navigation_selector</item>


        <!--
             This will change entire icon background (not icon fill color, but all clickable background).

             Obs: This will not work here. If you want to used then do not use this theme and add all
                  values directly to layout, like in the following example:

                <com.google.android.material.bottomnavigation.BottomNavigationView
                            ...
                            app:backgroundTint="@color/..."
                            app:itemTextColor="@color/..."
                            app:itemIconTint="@color/..."
                            app:itemBackground="@color/..."
                            .../>
        -->
        <!-- <item name="itemBackground">@color/colorPrimary</item> -->
    </style>


</resources>